{"version":3,"file":"static/js/736.d4005f10.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAClB,IAIDC,EAAU,mCAEVC,EAAiB,mCAAG,oGACDF,EAAAA,EAAAA,IAAU,qBAAsB,CACrDG,OAAQ,CAAEC,QAASH,KAFG,cAClBI,EADkB,yBAIjBA,EAASC,KAAKC,SAJG,2CAAH,qDAOjBC,EAAmB,mCAAG,WAAMC,GAAN,uFACHT,EAAAA,EAAAA,IAAA,gBAAmBS,GAAW,CACnDN,OAAQ,CAAEC,QAASH,KAFK,cACpBI,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOnBI,EAAmB,mCAAG,WAAMD,GAAN,uFACHT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,YAAsC,CAC3DN,OAAQ,CAAEC,QAASH,GACnBU,SAAU,UAHc,cACpBN,EADoB,yBAKnBA,EAASC,KAAKM,MALK,2CAAH,sDAQnBC,EAAmB,mCAAG,WAAMJ,GAAN,uFACHT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,YAAsC,CAC3DN,OAAQ,CAAEC,QAASH,KAFK,cACpBI,EADoB,yBAMnBA,EAASC,MANU,2CAAH,sDASnBQ,EAAY,mCAAG,WAAMC,GAAN,uFACIf,EAAAA,EAAAA,IAAU,eAAgB,CAC/CG,OAAQ,CACNC,QAASH,EACTc,MAAAA,KAJe,cACbV,EADa,yBAOZA,EAASC,MAPG,2CAAH,qD,wFCrCLU,EAAMC,EAAAA,GAAAA,IAAH,0DACZC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAD,EAAAA,GACAE,EAAAA,G,oICNSC,E,QAAQL,GAAAA,IAAH,yC,SCkDlB,EA7Ca,WACX,IAAMd,GAASoB,EAAAA,EAAAA,MACf,GAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KASA,OARAC,EAAAA,EAAAA,YAAU,YACRjB,EAAAA,EAAAA,IAAoBP,EAAOM,SACxBmB,KAAKF,GACLG,MAAMC,QAAQC,IAClB,GAAE,CAAC5B,EAAOM,WAKT,8BACIgB,GAGA,iCACE,kCACA,SAACT,EAAA,EAAD,CAAKgB,GAAG,KAAKZ,QAAQ,OAAOa,SAAS,OAArC,SACGR,EAAaS,KAAI,SAAAC,GAAK,OACrB,UAACnB,EAAA,EAAD,CACEgB,GAAG,KAEHZ,QAAQ,OACRgB,UAAU,0BACVC,GAAI,EACJC,GAAI,EANN,WAQE,SAAChB,EAAD,CACEiB,IAAG,0CAAqCJ,EAAMK,cAC9CC,IAAG,UAAKN,EAAMO,cAEhB,UAAC1B,EAAA,EAAD,CAAK2B,GAAI,EAAGC,GAAI,EAAhB,WACE,mCAAWT,EAAMU,SACjB,uCAAeV,EAAMO,kBAZlBP,EAAMW,GAHQ,UAL3B,iDA6BP,C","sources":["api/api.js","components/Box/Box.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nexport const axEffect = () => {\n  console.log(axios.defaults);\n};\n\nconst API_KEY = 'df36da6d24430bded092102d92ab8190';\n\nconst getTrendingMovies = async () => {\n  const response = await axios.get('trending/movie/day', {\n    params: { api_key: API_KEY },\n  });\n  return response.data.results;\n};\n\nconst getMovieDetailsById = async movieId => {\n  const response = await axios.get(`movie/${movieId}`, {\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n};\n\nconst getMovieCreditsById = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits`, {\n    params: { api_key: API_KEY },\n    language: 'en-US',\n  });\n  return response.data.cast;\n};\n\nconst getMovieReviewsById = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews`, {\n    params: { api_key: API_KEY },\n\n    // page: 1,\n  });\n  return response.data;\n};\n\nconst searchMovies = async query => {\n  const response = await axios.get('search/movie', {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  });\n  return response.data;\n};\n\nexport {\n  getTrendingMovies,\n  getMovieDetailsById,\n  getMovieCreditsById,\n  getMovieReviewsById,\n  searchMovies,\n};\n","import styled from 'styled-components';\nimport { display, grid, space, flexbox } from 'styled-system';\n\nexport const Box = styled.div`\n  ${space}\n  ${grid}\n  ${display}\n  ${grid}\n  ${flexbox}\n`;\n","import styled from 'styled-components';\n\nexport const Photo = styled.img`\n  width: 150px;\n`;\n","import { getMovieCreditsById } from 'api/api';\nimport { Box } from 'components/Box/Box';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Photo } from './Cast.styled';\n\nconst Cast = () => {\n  const params = useParams();\n  const [movieCredits, setMovieCredits] = useState(null);\n  useEffect(() => {\n    getMovieCreditsById(params.movieId)\n      .then(setMovieCredits)\n      .catch(console.log);\n  }, [params.movieId]);\n  // if (!movieCredits) {\n  //   return;\n  // }\n  return (\n    <>\n      {!movieCredits ? (\n        <h2>Unable to load cast</h2>\n      ) : (\n        <>\n          <h2>Cast</h2>\n          <Box as=\"ul\" display=\"flex\" flexWrap=\"wrap\">\n            {movieCredits.map(actor => (\n              <Box\n                as=\"li\"\n                key={actor.id}\n                display=\"flex\"\n                flexBasis=\"calc((100% - 20px) / 2)\"\n                mt={4}\n                mb={4}\n              >\n                <Photo\n                  src={`https://image.tmdb.org/t/p/w500/${actor.profile_path}`}\n                  alt={`${actor.character}`}\n                />\n                <Box ml={4} mr={4}>\n                  <p>Actor: {actor.name}</p>\n                  <p>Character: {actor.character}</p>\n                </Box>\n              </Box>\n            ))}\n          </Box>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["axios","API_KEY","getTrendingMovies","params","api_key","response","data","results","getMovieDetailsById","movieId","getMovieCreditsById","language","cast","getMovieReviewsById","searchMovies","query","Box","styled","space","grid","display","flexbox","Photo","useParams","useState","movieCredits","setMovieCredits","useEffect","then","catch","console","log","as","flexWrap","map","actor","flexBasis","mt","mb","src","profile_path","alt","character","ml","mr","name","id"],"sourceRoot":""}