{"version":3,"file":"static/js/998.884721dd.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAClB,IAIDC,EAAU,mCAEVC,EAAiB,mCAAG,oGACDF,EAAAA,EAAAA,IAAU,qBAAsB,CACrDG,OAAQ,CAAEC,QAASH,KAFG,cAClBI,EADkB,yBAIjBA,EAASC,KAAKC,SAJG,2CAAH,qDAOjBC,EAAmB,mCAAG,WAAMC,GAAN,uFACHT,EAAAA,EAAAA,IAAA,gBAAmBS,GAAW,CACnDN,OAAQ,CAAEC,QAASH,KAFK,cACpBI,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOnBI,EAAmB,mCAAG,WAAMD,GAAN,uFACHT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,YAAsC,CAC3DN,OAAQ,CAAEC,QAASH,GACnBU,SAAU,UAHc,cACpBN,EADoB,yBAKnBA,EAASC,KAAKM,MALK,2CAAH,sDAQnBC,EAAmB,mCAAG,WAAMJ,GAAN,uFACHT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,YAAsC,CAC3DN,OAAQ,CAAEC,QAASH,KAFK,cACpBI,EADoB,yBAMnBA,EAASC,MANU,2CAAH,sDASnBQ,EAAY,mCAAG,WAAMC,GAAN,uFACIf,EAAAA,EAAAA,IAAU,eAAgB,CAC/CG,OAAQ,CACNC,QAASH,EACTc,MAAAA,KAJe,cACbV,EADa,yBAOZA,EAASC,MAPG,2CAAH,qD,iICtCLU,EAASC,EAAAA,GAAAA,IAAH,wCAINC,EAAOD,EAAAA,GAAAA,GAAH,4EAMJE,EAAWF,EAAAA,GAAAA,GAAH,6G,IAMKA,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,sB,4BC4CvB,EAzDe,WACb,OAA4CI,EAAAA,EAAAA,UAAS,MAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,UAU/BC,EAAAA,EAAAA,YAAU,WACHF,GAAmB,KAAVA,IAGdf,EAAAA,EAAAA,IAAae,GAAOG,KAAKT,GAAmBU,MAAMC,QAAQC,IAC3D,GAAE,CAACN,IAEJ,IAAMO,EAAoB,SAAAP,GAExBD,EAD6B,KAAVC,EAAe,CAAC,EAAI,CAAEA,MAAAA,GAE1C,EAED,OACE,iCACE,kBAAMQ,SAvBW,SAAAC,GACnBA,EAAEC,iBACF,IAAMxB,EAAQuB,EAAEE,OAAOC,SAAS1B,MAAM2B,MACxB,KAAV3B,GAGJqB,EAAkBrB,EACnB,EAgBG,WACE,kBAAO4B,KAAK,OAAOC,KAAK,WACxB,mBAAQD,KAAK,SAAb,uBAEDrB,IACC,SAAC,EAAAuB,SAAD,CAAUC,UAAU,uCAApB,UACE,SAAC5B,EAAD,UACGI,EAAef,QAAQwC,KAAI,SAAAC,GAAK,OAC/B,SAAC7B,EAAD,WACE,UAAC,KAAD,CAAM8B,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAM5B,GAAhD,WACE,SAACR,EAAD,CACEqC,IACEL,EAAMM,YAAN,yCACsCN,EAAMM,aACxC,8DAENC,IAAI,gBAELP,EAAMnB,UAVImB,EAAME,GADU,UAoB5C,C","sources":["api/api.js","pages/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nexport const axEffect = () => {\n  console.log(axios.defaults);\n};\n\nconst API_KEY = 'df36da6d24430bded092102d92ab8190';\n\nconst getTrendingMovies = async () => {\n  const response = await axios.get('trending/movie/day', {\n    params: { api_key: API_KEY },\n  });\n  return response.data.results;\n};\n\nconst getMovieDetailsById = async movieId => {\n  const response = await axios.get(`movie/${movieId}`, {\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n};\n\nconst getMovieCreditsById = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits`, {\n    params: { api_key: API_KEY },\n    language: 'en-US',\n  });\n  return response.data.cast;\n};\n\nconst getMovieReviewsById = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews`, {\n    params: { api_key: API_KEY },\n\n    // page: 1,\n  });\n  return response.data;\n};\n\nconst searchMovies = async query => {\n  const response = await axios.get('search/movie', {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  });\n  return response.data;\n};\n\nexport {\n  getTrendingMovies,\n  getMovieDetailsById,\n  getMovieCreditsById,\n  getMovieReviewsById,\n  searchMovies,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nexport const Poster = styled.img`\n  width: 100%;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 13px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  flex-basis: calc((100% - 40px) / 4);\n`;\n\nexport const styledLink = styled(Link)``;\n","import { searchMovies } from 'api/api';\nimport { List, ListItem, Poster } from 'pages/Movies.styled';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchedMovies, setSearchedMovies] = useState(null);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const title = searchParams.get('title');\n  const handleSubmit = e => {\n    e.preventDefault();\n    const query = e.target.elements.query.value;\n    if (query === '') {\n      return;\n    }\n    updateQueryString(query);\n  };\n\n  useEffect(() => {\n    if (!title || title === '') {\n      return;\n    }\n    searchMovies(title).then(setSearchedMovies).catch(console.log);\n  }, [title]);\n\n  const updateQueryString = title => {\n    const nextParams = title === '' ? {} : { title };\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"query\" />\n        <button type=\"buttom\">Search</button>\n      </form>\n      {searchedMovies && (\n        <Suspense fallback={<h1>LOADING...</h1>}>\n          <List>\n            {searchedMovies.results.map(movie => (\n              <ListItem key={movie.id}>\n                <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                  <Poster\n                    src={\n                      movie.poster_path\n                        ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                        : 'https://dummyimage.com/500x750/ffffff/000000&text=No+poster'\n                    }\n                    alt=\"movie.title\"\n                  />\n                  {movie.title}\n                </Link>\n              </ListItem>\n            ))}\n          </List>\n        </Suspense>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","API_KEY","getTrendingMovies","params","api_key","response","data","results","getMovieDetailsById","movieId","getMovieCreditsById","language","cast","getMovieReviewsById","searchMovies","query","Poster","styled","List","ListItem","Link","useState","searchedMovies","setSearchedMovies","location","useLocation","useSearchParams","searchParams","setSearchParams","title","get","useEffect","then","catch","console","log","updateQueryString","onSubmit","e","preventDefault","target","elements","value","type","name","Suspense","fallback","map","movie","to","id","state","from","src","poster_path","alt"],"sourceRoot":""}