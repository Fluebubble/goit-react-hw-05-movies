{"version":3,"file":"static/js/257.5685e215.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAClB,IAIDC,EAAU,mCAEVC,EAAiB,mCAAG,oGACDF,EAAAA,EAAAA,IAAU,qBAAsB,CACrDG,OAAQ,CAAEC,QAASH,KAFG,cAClBI,EADkB,yBAIjBA,EAASC,KAAKC,SAJG,2CAAH,qDAOjBC,EAAmB,mCAAG,WAAMC,GAAN,uFACHT,EAAAA,EAAAA,IAAA,gBAAmBS,GAAW,CACnDN,OAAQ,CAAEC,QAASH,KAFK,cACpBI,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOnBI,EAAmB,mCAAG,WAAMD,GAAN,uFACHT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,YAAsC,CAC3DN,OAAQ,CAAEC,QAASH,GACnBU,SAAU,UAHc,cACpBN,EADoB,yBAKnBA,EAASC,KAAKM,MALK,2CAAH,sDAQnBC,EAAmB,mCAAG,WAAMJ,GAAN,uFACHT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,YAAsC,CAC3DN,OAAQ,CAAEC,QAASH,KAFK,cACpBI,EADoB,yBAMnBA,EAASC,MANU,2CAAH,sDASnBQ,EAAY,mCAAG,WAAMC,GAAN,uFACIf,EAAAA,EAAAA,IAAU,eAAgB,CAC/CG,OAAQ,CACNC,QAASH,EACTc,MAAAA,KAJe,cACbV,EADa,yBAOZA,EAASC,MAPG,2CAAH,qD,wFCrCLU,EAAMC,EAAAA,GAAAA,IAAH,0DACZC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAD,EAAAA,GACAE,EAAAA,G,0JCLSC,EAASL,EAAAA,GAAAA,IAAH,yCAINM,GAAUN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,4DACT,SAAAQ,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,IAAnB,IACG,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,UAAU,EAAtB,I,kBCiDhB,EApDqB,WAAO,IAAD,IACnB1B,GAAS2B,EAAAA,EAAAA,MACf,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAIjB,IAHAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAwBlC,EAAOM,SAAS6B,KAAKL,EAC9C,GAAE,CAAC9B,EAAOM,UACNuB,EAIL,OADAO,QAAQC,IAAIN,IAEV,iCACE,UAAC,KAAD,CACEO,GAAE,oBAAEP,EAASQ,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAC5BC,MAAO,CACLxB,QAAS,OACTyB,WAAY,SACZC,UAAW,OACXC,MAAO,SANX,WASE,SAAC,MAAD,CAAgBC,KAAM,KATxB,cAYA,UAAChC,EAAA,EAAD,CAAKI,QAAQ,OAAO6B,GAAI,EAAGC,QAAS,EAApC,WACE,SAAC5B,EAAD,CAAQ6B,IAAG,yCAAoCnB,EAAMoB,gBACrD,UAACpC,EAAA,EAAD,YACE,wBAAKgB,EAAMqB,SACX,wCAAgBC,KAAKC,MAAMvB,EAAMwB,YAAjC,QACA,uCACA,uBAAIxB,EAAMyB,YACV,qCACA,uBAAIzB,EAAM0B,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,SAC/C,wCACA,2BACE,yBACE,SAACvC,EAAD,CAASkB,GAAG,OAAZ,qBAEF,yBACE,SAAClB,EAAD,CAASkB,GAAG,UAAZ,iCAKR,SAAC,EAAAsB,SAAD,CAAUC,UAAU,uCAApB,UACE,SAAC,KAAD,QAIP,C","sources":["api/api.js","components/Box/Box.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nexport const axEffect = () => {\n  console.log(axios.defaults);\n};\n\nconst API_KEY = 'df36da6d24430bded092102d92ab8190';\n\nconst getTrendingMovies = async () => {\n  const response = await axios.get('trending/movie/day', {\n    params: { api_key: API_KEY },\n  });\n  return response.data.results;\n};\n\nconst getMovieDetailsById = async movieId => {\n  const response = await axios.get(`movie/${movieId}`, {\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n};\n\nconst getMovieCreditsById = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits`, {\n    params: { api_key: API_KEY },\n    language: 'en-US',\n  });\n  return response.data.cast;\n};\n\nconst getMovieReviewsById = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews`, {\n    params: { api_key: API_KEY },\n\n    // page: 1,\n  });\n  return response.data;\n};\n\nconst searchMovies = async query => {\n  const response = await axios.get('search/movie', {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  });\n  return response.data;\n};\n\nexport {\n  getTrendingMovies,\n  getMovieDetailsById,\n  getMovieCreditsById,\n  getMovieReviewsById,\n  searchMovies,\n};\n","import styled from 'styled-components';\nimport { display, grid, space, flexbox } from 'styled-system';\n\nexport const Box = styled.div`\n  ${space}\n  ${grid}\n  ${display}\n  ${grid}\n  ${flexbox}\n`;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Poster = styled.img`\n  width: 300px;\n`;\n\nexport const NavItem = styled(NavLink)`\n  color: ${p => p.theme.colors.text};\n  font-size: ${p => p.theme.fontSizes[3]}px;\n`;\n","import * as API from 'api/api';\nimport { Box } from 'components/Box/Box';\nimport { Suspense, useEffect, useState } from 'react';\nimport { NavLink, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { NavItem, Poster } from './MovieDetails.styled';\nimport { BiLeftArrowAlt } from 'react-icons/bi';\nconst MovieDetails = () => {\n  const params = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  useEffect(() => {\n    API.getMovieDetailsById(params.movieId).then(setMovie);\n  }, [params.movieId]);\n  if (!movie) {\n    return;\n  }\n  console.log(location);\n  return (\n    <>\n      <NavLink\n        to={location.state?.from ?? '/'}\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          marginTop: '32px',\n          color: 'white',\n        }}\n      >\n        <BiLeftArrowAlt size={20} />\n        Go back\n      </NavLink>\n      <Box display=\"flex\" mt={5} gridGap={5}>\n        <Poster src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} />\n        <Box>\n          <h1>{movie.title}</h1>\n          <p>User score: {Math.round(movie.popularity)}%</p>\n          <h2>Overview:</h2>\n          <p>{movie.overview}</p>\n          <h3>Genres:</h3>\n          <p>{movie.genres.map(genre => genre.name).join(', ')}</p>\n          <h2>More info:</h2>\n          <ul>\n            <li>\n              <NavItem to=\"cast\">Cast</NavItem>\n            </li>\n            <li>\n              <NavItem to=\"reviews\">Reviews</NavItem>\n            </li>\n          </ul>\n        </Box>\n      </Box>\n      <Suspense fallback={<h1>LOADING...</h1>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","API_KEY","getTrendingMovies","params","api_key","response","data","results","getMovieDetailsById","movieId","getMovieCreditsById","language","cast","getMovieReviewsById","searchMovies","query","Box","styled","space","grid","display","flexbox","Poster","NavItem","NavLink","p","theme","colors","text","fontSizes","useParams","useState","movie","setMovie","location","useLocation","useEffect","API","then","console","log","to","state","from","style","alignItems","marginTop","color","size","mt","gridGap","src","poster_path","title","Math","round","popularity","overview","genres","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}