{"version":3,"file":"static/js/186.865b59b1.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAClB,IAIDC,EAAU,mCAEVC,EAAiB,mCAAG,oGACDF,EAAAA,EAAAA,IAAU,qBAAsB,CACrDG,OAAQ,CAAEC,QAASH,KAFG,cAClBI,EADkB,yBAIjBA,EAASC,KAAKC,SAJG,2CAAH,qDAOjBC,EAAmB,mCAAG,WAAMC,GAAN,uFACHT,EAAAA,EAAAA,IAAA,gBAAmBS,GAAW,CACnDN,OAAQ,CAAEC,QAASH,KAFK,cACpBI,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOnBI,EAAmB,mCAAG,WAAMD,GAAN,uFACHT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,YAAsC,CAC3DN,OAAQ,CAAEC,QAASH,GACnBU,SAAU,UAHc,cACpBN,EADoB,yBAKnBA,EAASC,KAAKM,MALK,2CAAH,sDAQnBC,EAAmB,mCAAG,WAAMJ,GAAN,uFACHT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,YAAsC,CAC3DN,OAAQ,CAAEC,QAASH,KAFK,cACpBI,EADoB,yBAMnBA,EAASC,MANU,2CAAH,sDASnBQ,EAAY,mCAAG,WAAMC,GAAN,uFACIf,EAAAA,EAAAA,IAAU,eAAgB,CAC/CG,OAAQ,CACNC,QAASH,EACTc,MAAAA,KAJe,cACbV,EADa,yBAOZA,EAASC,MAPG,2CAAH,qD,kFCAlB,UAnCgB,WACd,OAA8BU,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMf,GAASgB,EAAAA,EAAAA,MAOf,IANAC,EAAAA,EAAAA,YAAU,YACRP,EAAAA,EAAAA,IAAoBV,EAAOM,SACxBY,MAAK,SAAAC,GAAC,OAAIJ,EAAWI,EAAEf,QAAjB,IACNgB,MAAMC,QAAQC,IAClB,GAAE,CAACtB,EAAOM,UACXe,QAAQC,IAAI,UAAWR,GAClBA,EAGL,OACE,8BACGA,EAAQS,QACP,4BACE,sCACA,wBACGT,EAAQU,KAAI,SAAAC,GAAM,OACjB,2BACE,wBACE,oCAAYA,EAAOC,aAErB,uBAAID,EAAOE,YAJJF,EAAOG,GADC,UAWvB,4CAIP,C","sources":["api/api.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nexport const axEffect = () => {\n  console.log(axios.defaults);\n};\n\nconst API_KEY = 'df36da6d24430bded092102d92ab8190';\n\nconst getTrendingMovies = async () => {\n  const response = await axios.get('trending/movie/day', {\n    params: { api_key: API_KEY },\n  });\n  return response.data.results;\n};\n\nconst getMovieDetailsById = async movieId => {\n  const response = await axios.get(`movie/${movieId}`, {\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n};\n\nconst getMovieCreditsById = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits`, {\n    params: { api_key: API_KEY },\n    language: 'en-US',\n  });\n  return response.data.cast;\n};\n\nconst getMovieReviewsById = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews`, {\n    params: { api_key: API_KEY },\n\n    // page: 1,\n  });\n  return response.data;\n};\n\nconst searchMovies = async query => {\n  const response = await axios.get('search/movie', {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  });\n  return response.data;\n};\n\nexport {\n  getTrendingMovies,\n  getMovieDetailsById,\n  getMovieCreditsById,\n  getMovieReviewsById,\n  searchMovies,\n};\n","import { getMovieReviewsById } from 'api/api';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const params = useParams();\n  useEffect(() => {\n    getMovieReviewsById(params.movieId)\n      .then(r => setReviews(r.results))\n      .catch(console.log);\n  }, [params.movieId]);\n  console.log('reviews', reviews);\n  if (!reviews) {\n    return;\n  }\n  return (\n    <>\n      {reviews.length ? (\n        <div>\n          <h2>Reviews:</h2>\n          <ul>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <p>\n                  <b>Author: {review.author}</b>\n                </p>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <h3>No reviews yet</h3>\n      )}\n    </>\n  );\n};\n\nexport default Reviews"],"names":["axios","API_KEY","getTrendingMovies","params","api_key","response","data","results","getMovieDetailsById","movieId","getMovieCreditsById","language","cast","getMovieReviewsById","searchMovies","query","useState","reviews","setReviews","useParams","useEffect","then","r","catch","console","log","length","map","review","author","content","id"],"sourceRoot":""}